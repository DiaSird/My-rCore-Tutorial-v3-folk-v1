name: CI

on:
  push:
    branches:
      - "*"
    tags:
      - "*"
  pull_request:
  workflow_dispatch:

jobs:
  lint:
    name: Check
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
      - name: Install `rust-src` Rustup Components
        run: rustup component add rust-src
      - name: Run `cargo check`
        uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
      - name: Add Rustup target riscv64gc
        run: rustup target add riscv64gc-unknown-none-elf
      - name: Install Rustup Components
        run: rustup component add rust-src llvm-tools-preview

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: riscv64
      - name: "Sanity checking QEMU"
        run: qemu-system-riscv64 --version && qemu-riscv64 --version

      - name: Run `qemu`(instead of Test now)
        run: make run

  check_formatting:
    name: Check Formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt
          override: true
      - name: Run `cargo fmt`
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: clippy, rust-src
          override: true
      - name: Run `cargo clippy`
        uses: actions-rs/cargo@v1
        with:
          command: clippy
